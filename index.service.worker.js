const CACHE_VERSION="1741487993|384378144",CACHE_PREFIX="Five Nights at C-sw-cache-",CACHE_NAME=CACHE_PREFIX+CACHE_VERSION,OFFLINE_URL="index.offline.html",ENSURE_CROSSORIGIN_ISOLATION_HEADERS=!0,CACHED_FILES=["index.html","index.js","index.offline.html","index.icon.png","index.apple-touch-icon.png","index.audio.worklet.js","index.audio.position.worklet.js"],CACHEABLE_FILES=["index.wasm","index.pck"],FULL_CACHE=CACHED_FILES.concat(CACHEABLE_FILES);function ensureCrossOriginIsolationHeaders(e){if("require-corp"===e.headers.get("Cross-Origin-Embedder-Policy")&&"same-origin"===e.headers.get("Cross-Origin-Opener-Policy"))return e;const t=new Headers(e.headers);t.set("Cross-Origin-Embedder-Policy","require-corp"),t.set("Cross-Origin-Opener-Policy","same-origin");return new Response(e.body,{status:e.status,statusText:e.statusText,headers:t})}async function fetchAndCache(e,t,s){let n=await e.preloadResponse;return null==n&&(n=await self.fetch(e.request)),n=ensureCrossOriginIsolationHeaders(n),s&&t.put(e.request,n.clone()),n}self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>e.addAll(CACHED_FILES))))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((function(e){return Promise.all(e.filter((e=>e.startsWith(CACHE_PREFIX)&&e!==CACHE_NAME)).map((e=>caches.delete(e))))})).then((function(){return"navigationPreload"in self.registration?self.registration.navigationPreload.enable():Promise.resolve()})))})),self.addEventListener("fetch",(e=>{const t="navigate"===e.request.mode,s=e.request.url||"",n=e.request.referrer||"",i=n.slice(0,n.lastIndexOf("/")+1),r=s.startsWith(i)?s.replace(i,""):"",a=FULL_CACHE.some((e=>e===r))||i===n&&i.endsWith(CACHED_FILES[0]);t||a?e.respondWith((async()=>{const s=await caches.open(CACHE_NAME);if(t){if((await Promise.all(FULL_CACHE.map((e=>s.match(e))))).some((e=>void 0===e)))try{return await fetchAndCache(e,s,a)}catch(e){return caches.match(OFFLINE_URL)}}let n=await s.match(e.request);if(null!=n)return n=ensureCrossOriginIsolationHeaders(n),n;return await fetchAndCache(e,s,a)})()):e.respondWith((async()=>{let t=await fetch(e.request);return t=ensureCrossOriginIsolationHeaders(t),t})())})),self.addEventListener("message",(e=>{if(e.origin!==self.origin)return;const t=e.source.id||"",s=e.data||"";self.clients.get(t).then((function(e){e&&("claim"===s?self.skipWaiting().then((()=>self.clients.claim())):"clear"===s?caches.delete(CACHE_NAME):"update"===s&&self.skipWaiting().then((()=>self.clients.claim())).then((()=>self.clients.matchAll())).then((e=>e.forEach((e=>e.navigate(e.url))))))}))}));